-- MySQL Script generated by MySQL Workbench
-- Mon May 15 11:01:24 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema urbany
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema urbany
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `urbany` DEFAULT CHARACTER SET utf8 ;
USE `urbany` ;

-- -----------------------------------------------------
-- Table `urbany`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`account` (
  `account_id` INT NOT NULL AUTO_INCREMENT,
  `created` TIMESTAMP NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `phone_number` VARCHAR(20) NOT NULL,
  `activation_code` CHAR(6) NOT NULL,
  `is_activate` CHAR(2) NOT NULL DEFAULT 0,
  `is_agent` CHAR(2) NULL DEFAULT 0,
  PRIMARY KEY (`account_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`real_estate_agency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`real_estate_agency` (
  `agency_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `thumbnail` VARCHAR(45) NULL,
  `description` TEXT(500) NULL,
  `phone1` VARCHAR(45) NULL,
  `phone2` VARCHAR(45) NULL,
  `url` VARCHAR(45) NULL,
  PRIMARY KEY (`agency_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`suscription_plan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`suscription_plan` (
  `plan_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `description` TEXT NULL,
  `price1` DECIMAL(10,2) NULL,
  `price2` DECIMAL(10,2) NULL,
  `price3` DECIMAL(10,2) NULL,
  PRIMARY KEY (`plan_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent` (
  `account_id` INT NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `created` TIMESTAMP NOT NULL,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  `is_verified` CHAR(2) NOT NULL DEFAULT 0,
  `address` TEXT(300) NULL,
  `ci` VARCHAR(9) NOT NULL,
  `rut` VARCHAR(45) NULL,
  `phone_number1` VARCHAR(12) NULL,
  `phone_number2` VARCHAR(12) NULL,
  `url_name` VARCHAR(255) NULL,
  `website_url` VARCHAR(255) NULL,
  `facebook_url` VARCHAR(255) NULL,
  `twitter_url` VARCHAR(255) NULL,
  `linkedin_url` VARCHAR(255) NULL,
  `blog_url` VARCHAR(255) NULL,
  `about_me` TEXT(500) NULL,
  `agency_id` INT NULL,
  `plan_expired_date` DATE NULL,
  `has_plan` CHAR(2) NULL,
  `urbany_number` CHAR(8) NULL,
  `birthdate` DATE NULL,
  `plan_id` INT NULL,
  PRIMARY KEY (`account_id`),
  INDEX `fk_agent_real_estate_organization1_idx` (`agency_id` ASC),
  INDEX `fk_agent_suscription_plan1_idx` (`plan_id` ASC),
  CONSTRAINT `fk_agent_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent_real_estate_organization1`
    FOREIGN KEY (`agency_id`)
    REFERENCES `urbany`.`real_estate_agency` (`agency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent_suscription_plan1`
    FOREIGN KEY (`plan_id`)
    REFERENCES `urbany`.`suscription_plan` (`plan_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`user` (
  `account_id` INT NOT NULL,
  `ci` CHAR(9) NULL,
  `screenname` VARCHAR(45) NULL,
  `thumbnail` VARCHAR(45) NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  PRIMARY KEY (`account_id`),
  CONSTRAINT `fk_user_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`property_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`property_status` (
  `status_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT NOT NULL,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  PRIMARY KEY (`status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`coin_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`coin_type` (
  `coin_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `symbol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`coin_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`property_condition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`property_condition` (
  `condition_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`condition_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`location` (
  `location_id` INT NOT NULL,
  `address` TEXT NOT NULL,
  `address_url` VARCHAR(255) NOT NULL,
  `zipcode` VARCHAR(45) NULL,
  `polygon` LONGTEXT NULL,
  `parent_node` INT NULL,
  `category_node_name` VARCHAR(45) NULL,
  `sale_price_mt2_history` DECIMAL(10,2) NULL,
  `rent_price_mt2_history` DECIMAL(10,2) NULL,
  `count_total_views` BIGINT NULL,
  `count_total_saves` BIGINT NULL,
  PRIMARY KEY (`location_id`),
  INDEX `fk_location_location1_idx` (`parent_node` ASC),
  UNIQUE INDEX `address_UNIQUE` (`address` ASC),
  UNIQUE INDEX `address_url_UNIQUE` (`address_url` ASC),
  CONSTRAINT `fk_location_location1`
    FOREIGN KEY (`parent_node`)
    REFERENCES `urbany`.`location` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`property_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`property_type` (
  `type_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`property`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`property` (
  `house_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `created` TIMESTAMP NOT NULL,
  `status_id` INT NOT NULL,
  `type_id` INT NOT NULL,
  `is_for_sale` CHAR(2) NULL,
  `is_for_rent` CHAR(2) NULL,
  `sale_price` DECIMAL(10,2) NULL,
  `sale_type_coin` INT NULL,
  `sale_initial_fee` DECIMAL(10,2) NULL,
  `sale_price_mt2` DECIMAL(10,2) NULL,
  `rent_price` DECIMAL(10,2) NULL,
  `rent_type_coin` INT NULL,
  `rent_common_expenses` DECIMAL(10,2) NULL,
  `rent_price_mt2` DECIMAL(10,2) NULL,
  `condition_id` INT NOT NULL,
  `location_address` TEXT NOT NULL,
  `location_latitude` VARCHAR(45) NOT NULL,
  `location_longitude` VARCHAR(45) NOT NULL,
  `location_id` INT NOT NULL,
  `thumbnail` TEXT(500) NULL,
  `url` TEXT(500) NULL,
  `url_youtube` VARCHAR(45) NULL,
  `description` TEXT(1000) NULL,
  `attr_heating_system` CHAR(2) NOT NULL DEFAULT 0,
  `attr_garden` INT(2) NULL,
  `attr_barbecue` INT(2) NULL,
  `attr_furnished` INT(2) NULL,
  `attr_pool` INT(2) NULL,
  `attr_laundry` INT(2) NULL,
  `attr_balcony` INT(2) NULL,
  `attr_ocean_view` INT(2) NULL,
  `attr_security` INT(2) NULL,
  `attr_elevator` INT(2) NULL,
  `attr_dealing_directly_owner` INT(2) NULL,
  `attr_nearby_supermarket` INT(2) NULL,
  `attr_nearby_school` INT(2) NULL,
  `attr_nearby_bus_stop` INT(2) NULL,
  `attr_electric_gate` INT(2) NULL,
  `attr_total_parking_spot` INT(2) NULL,
  `attr_enable_scheduled` CHAR(2) NULL,
  `attr_floor_level` INT(3) NULL,
  `attr_total_beds` INT(3) NULL,
  `attr_total_baths` INT(3) NULL,
  `attr_property_build_year` INT(4) NULL,
  `is_recycled` CHAR(2) NULL,
  `count_views` INT NULL,
  `count_favorites` INT NULL,
  `count_saves` INT NULL,
  `count_total_shares` INT NULL,
  `building_dimensions_mt2` VARCHAR(10) NULL,
  `space_dimensions_mt2` VARCHAR(12) NULL,
  `has_exposition` CHAR(2) NULL,
  `exposition_expired_date` DATE NULL,
  PRIMARY KEY (`house_id`),
  INDEX `fk_house_agent1_idx` (`account_id` ASC),
  INDEX `fk_property_property_status1_idx` (`status_id` ASC),
  INDEX `fk_property_coin_type1_idx` (`sale_type_coin` ASC),
  INDEX `fk_property_coin_type2_idx` (`rent_type_coin` ASC),
  INDEX `fk_property_property_condition1_idx` (`condition_id` ASC),
  INDEX `fk_property_location1_idx` (`location_id` ASC),
  INDEX `fk_property_property_type1_idx` (`type_id` ASC),
  CONSTRAINT `fk_house_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_property_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `urbany`.`property_status` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_coin_type1`
    FOREIGN KEY (`sale_type_coin`)
    REFERENCES `urbany`.`coin_type` (`coin_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_coin_type2`
    FOREIGN KEY (`rent_type_coin`)
    REFERENCES `urbany`.`coin_type` (`coin_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_property_condition1`
    FOREIGN KEY (`condition_id`)
    REFERENCES `urbany`.`property_condition` (`condition_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `urbany`.`location` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_property_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `urbany`.`property_type` (`type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`property_pictures`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`property_pictures` (
  `picture` INT NOT NULL AUTO_INCREMENT,
  `property_id` INT NOT NULL,
  `image_large` TEXT(500) NOT NULL,
  `image_tiny` TEXT(500) NOT NULL,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  PRIMARY KEY (`picture`),
  INDEX `fk_house_picture_house1_idx` (`property_id` ASC),
  CONSTRAINT `fk_house_picture_house1`
    FOREIGN KEY (`property_id`)
    REFERENCES `urbany`.`property` (`house_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`account_session_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`account_session_history` (
  `session_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  `ip` VARCHAR(45) NOT NULL,
  `created` TIMESTAMP NOT NULL,
  `token` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`session_id`),
  INDEX `fk_sessions_account1_idx` (`account_id` ASC),
  CONSTRAINT `fk_sessions_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`user_saved_property`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`user_saved_property` (
  `saved_id` INT NOT NULL AUTO_INCREMENT,
  `property_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  `created` TIMESTAMP NOT NULL,
  PRIMARY KEY (`saved_id`),
  INDEX `fk_user_favorite_houses_house1_idx` (`property_id` ASC),
  INDEX `fk_user_favorite_houses_user1_idx` (`account_id` ASC),
  CONSTRAINT `fk_user_favorite_houses_house1`
    FOREIGN KEY (`property_id`)
    REFERENCES `urbany`.`property` (`house_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_favorite_houses_user1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`user` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_settings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_settings` (
  `account_id` INT NOT NULL,
  `show_real_state_sold` CHAR(2) NULL DEFAULT '1',
  `show_address` CHAR(2) NULL DEFAULT '1',
  `show_whatsapp` CHAR(2) NULL DEFAULT '1',
  `show_age` CHAR(2) NULL DEFAULT '1',
  `show_years_experience` CHAR(2) NULL DEFAULT '1',
  `receive_email_new_review` CHAR(2) NULL DEFAULT '1',
  `show_reviews` CHAR(2) NULL DEFAULT '1',
  `show_listing_representation` CHAR(2) NULL DEFAULT '1',
  `receive_email_news` CHAR(2) NULL DEFAULT '1',
  `show_my_ranked` CHAR(2) NULL,
  PRIMARY KEY (`account_id`),
  CONSTRAINT `fk_agent_settings_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`user_settings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`user_settings` (
  `account_id` INT NOT NULL,
  PRIMARY KEY (`account_id`),
  CONSTRAINT `fk_user_settings_user1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`user` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_scheduled`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_scheduled` (
  `scheduled_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `house_id` INT NOT NULL,
  `calendar_date` DATE NULL,
  `calendar_time` TIME NULL,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  `contact_full_name` VARCHAR(45) NOT NULL,
  `contact_email` VARCHAR(45) NOT NULL,
  `contact_phone` VARCHAR(45) NOT NULL,
  `contact_comment` TEXT NOT NULL,
  `contact_ip` VARCHAR(45) NOT NULL,
  `is_readed` CHAR(2) NOT NULL DEFAULT 0,
  `created` TIMESTAMP NULL,
  PRIMARY KEY (`scheduled_id`),
  INDEX `fk_agent_calendar_agent1_idx` (`account_id` ASC),
  INDEX `fk_agent_calendar_house1_idx` (`house_id` ASC),
  CONSTRAINT `fk_agent_calendar_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent_calendar_house1`
    FOREIGN KEY (`house_id`)
    REFERENCES `urbany`.`property` (`house_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`languages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`languages` (
  `language_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`language_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_languages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_languages` (
  `agent_language_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `language_id` INT NOT NULL,
  PRIMARY KEY (`agent_language_id`),
  INDEX `fk_agent_languages_agent1_idx` (`account_id` ASC),
  INDEX `fk_agent_languages_languages1_idx` (`language_id` ASC),
  CONSTRAINT `fk_agent_languages_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent_languages_languages1`
    FOREIGN KEY (`language_id`)
    REFERENCES `urbany`.`languages` (`language_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`account_notifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`account_notifications` (
  `notification_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `url` VARCHAR(45) NULL,
  `created` TIMESTAMP NOT NULL,
  `is_readed` CHAR(2) NOT NULL DEFAULT 0,
  `message` TEXT NULL,
  PRIMARY KEY (`notification_id`),
  INDEX `fk_account_notifications_account1_idx` (`account_id` ASC),
  CONSTRAINT `fk_account_notifications_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`user_saved_search`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`user_saved_search` (
  `search_id` INT NOT NULL AUTO_INCREMENT,
  `user_account_id` INT NOT NULL,
  `url` TEXT NOT NULL,
  `created` TIMESTAMP NOT NULL,
  PRIMARY KEY (`search_id`),
  INDEX `fk_user_saved_search_user1_idx` (`user_account_id` ASC),
  CONSTRAINT `fk_user_saved_search_user1`
    FOREIGN KEY (`user_account_id`)
    REFERENCES `urbany`.`user` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`property_views_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`property_views_history` (
  `view_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NULL,
  `property_id` INT NOT NULL,
  `created` TIMESTAMP NOT NULL,
  `ip` VARCHAR(45) NULL,
  PRIMARY KEY (`view_id`),
  INDEX `fk_user_history_user1_idx` (`account_id` ASC),
  INDEX `fk_user_history_house1_idx` (`property_id` ASC),
  CONSTRAINT `fk_user_history_user1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`user` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_history_house1`
    FOREIGN KEY (`property_id`)
    REFERENCES `urbany`.`property` (`house_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`listing`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`listing` (
  `listing_id` INT NOT NULL AUTO_INCREMENT,
  `user_account_id` INT NOT NULL,
  `is_for_sale` CHAR(2) NULL,
  `is_for_rent` CHAR(2) NULL,
  `attr_total_beds` INT(3) NULL,
  `attr_total_baths` INT(3) NULL,
  `description` TEXT(1000) NULL,
  `location_address` TEXT NULL,
  `location_latitude` VARCHAR(45) NULL,
  `location_longitude` VARCHAR(45) NULL,
  `thumbnail` TEXT(500) NULL,
  `is_recycled` CHAR(2) NULL,
  `location_id` INT NOT NULL,
  `status` CHAR(2) NULL,
  PRIMARY KEY (`listing_id`),
  INDEX `fk_listing_user1_idx` (`user_account_id` ASC),
  INDEX `fk_listing_location1_idx` (`location_id` ASC),
  CONSTRAINT `fk_listing_user1`
    FOREIGN KEY (`user_account_id`)
    REFERENCES `urbany`.`user` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_listing_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `urbany`.`location` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`property_transaction_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`property_transaction_status` (
  `status_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`property_transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`property_transaction` (
  `transaction_id` INT NOT NULL AUTO_INCREMENT,
  `property_id` INT NULL,
  `user_account_id` INT NOT NULL,
  `listing_id` INT NOT NULL,
  `agent_account_id` INT NOT NULL,
  `status_id` INT NOT NULL,
  `created` TIMESTAMP NULL,
  PRIMARY KEY (`transaction_id`),
  INDEX `fk_house_transaction_house1_idx` (`property_id` ASC),
  INDEX `fk_house_transaction_user1_idx` (`user_account_id` ASC),
  INDEX `fk_property_transaction_listing1_idx` (`listing_id` ASC),
  INDEX `fk_property_transaction_agent1_idx` (`agent_account_id` ASC),
  INDEX `fk_property_transaction_property_transaction_status1_idx` (`status_id` ASC),
  CONSTRAINT `fk_house_transaction_house1`
    FOREIGN KEY (`property_id`)
    REFERENCES `urbany`.`property` (`house_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_house_transaction_user1`
    FOREIGN KEY (`user_account_id`)
    REFERENCES `urbany`.`user` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_transaction_listing1`
    FOREIGN KEY (`listing_id`)
    REFERENCES `urbany`.`listing` (`listing_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_transaction_agent1`
    FOREIGN KEY (`agent_account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_transaction_property_transaction_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `urbany`.`property_transaction_status` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_studies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_studies` (
  `study_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `institute` VARCHAR(45) NOT NULL,
  `since` INT NOT NULL,
  `to` INT NULL,
  `created` TIMESTAMP NOT NULL,
  PRIMARY KEY (`study_id`),
  INDEX `fk_agent_studies_agent1_idx` (`account_id` ASC),
  CONSTRAINT `fk_agent_studies_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_reviews` (
  `review_id` INT NOT NULL AUTO_INCREMENT,
  `agent_account_id` INT NOT NULL,
  `user_account_id` INT NOT NULL,
  `created` TIMESTAMP NULL,
  `comment` TEXT(500) NULL,
  `address` VARCHAR(45) NOT NULL,
  `voted_professionalism` CHAR(2) NOT NULL,
  `voted_skills` CHAR(2) NOT NULL,
  `voted_responsiveness` CHAR(2) NOT NULL,
  `voted_experience` CHAR(2) NOT NULL,
  `voted_general` CHAR(2) NOT NULL,
  `reply_comment` TEXT(500) NULL,
  `reply_created` TIMESTAMP NULL,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  `worked_year` TINYINT NULL,
  `is_readed_by_agent` CHAR(2) NULL DEFAULT 0,
  PRIMARY KEY (`review_id`),
  INDEX `fk_agent_reviews_agent1_idx` (`agent_account_id` ASC),
  INDEX `fk_agent_reviews_user1_idx` (`user_account_id` ASC),
  CONSTRAINT `fk_agent_reviews_agent1`
    FOREIGN KEY (`agent_account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent_reviews_user1`
    FOREIGN KEY (`user_account_id`)
    REFERENCES `urbany`.`user` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_statistics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_statistics` (
  `account_id` INT NOT NULL,
  `counter_profile_views` BIGINT NULL DEFAULT 0,
  `counter_propreties_views` BIGINT NULL DEFAULT 0,
  `counter_properties_published` INT NULL DEFAULT 0,
  `counter_properties_request_info` INT NULL DEFAULT 0,
  `counter_listing_represented` INT NULL DEFAULT 0,
  `counter_reviews` INT NULL DEFAULT 0,
  `average_reviews` CHAR(2) NULL DEFAULT 0,
  `counter_properties_finished` INT NULL DEFAULT 0,
  `counter_properties_active` INT NULL,
  PRIMARY KEY (`account_id`),
  CONSTRAINT `fk_agent_statistics_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`interface_message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`interface_message` (
  `interface_message_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NULL,
  `message` TEXT NULL,
  `interface_messagecol` VARCHAR(45) NULL,
  `show_in_this_page` VARCHAR(45) NULL,
  PRIMARY KEY (`interface_message_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`interface_message_account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`interface_message_account` (
  `message_id` INT NOT NULL AUTO_INCREMENT,
  `is_read` CHAR(2) NULL,
  `datetime_read` TIMESTAMP NULL,
  `account_id` INT NOT NULL,
  `interface_message_id` INT NOT NULL,
  PRIMARY KEY (`message_id`),
  INDEX `fk_interface_message_account_account1_idx` (`account_id` ASC),
  INDEX `fk_interface_message_account_interface_message1_idx` (`interface_message_id` ASC),
  CONSTRAINT `fk_interface_message_account_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`account` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interface_message_account_interface_message1`
    FOREIGN KEY (`interface_message_id`)
    REFERENCES `urbany`.`interface_message` (`interface_message_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_post` (
  `post_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `text` TEXT NULL,
  `image` TEXT NULL,
  `created` DATETIME NOT NULL,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  `total_likes` INT NOT NULL DEFAULT 0,
  `total_comments` INT NOT NULL DEFAULT 0,
  `total_reports` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`post_id`),
  INDEX `fk_agent_wall_agent1_idx` (`account_id` ASC),
  CONSTRAINT `fk_agent_wall_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_events`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_events` (
  `event_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `title` CHAR(255) NOT NULL,
  `image` TEXT NOT NULL,
  `created` DATETIME NOT NULL,
  `external_link` TEXT NULL,
  `date_start` DATE NOT NULL,
  `time_start` TIME NOT NULL,
  `date_end` DATE NULL,
  `time_end` TIME NULL,
  `description` DATE NOT NULL,
  `speakers` TEXT NULL,
  `is_online` CHAR(2) NOT NULL DEFAULT 0,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  PRIMARY KEY (`event_id`),
  INDEX `fk_agent_events_agent1_idx` (`account_id` ASC),
  CONSTRAINT `fk_agent_events_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_confirm_assistance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_confirm_assistance` (
  `assistance_id` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`assistance_id`),
  INDEX `fk_agent_confirm_assistance_agent_events1_idx` (`event_id` ASC),
  INDEX `fk_agent_confirm_assistance_agent1_idx` (`account_id` ASC),
  CONSTRAINT `fk_agent_confirm_assistance_agent_events1`
    FOREIGN KEY (`event_id`)
    REFERENCES `urbany`.`agent_events` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent_confirm_assistance_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_like_post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_like_post` (
  `like_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `post_id` INT NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`like_id`),
  INDEX `fk_anget_like_post_agent1_idx` (`account_id` ASC),
  INDEX `fk_anget_like_post_agent_post1_idx` (`post_id` ASC),
  CONSTRAINT `fk_anget_like_post_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_anget_like_post_agent_post1`
    FOREIGN KEY (`post_id`)
    REFERENCES `urbany`.`agent_post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_comment_post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_comment_post` (
  `comment_id` INT NOT NULL AUTO_INCREMENT,
  `comment` TEXT NOT NULL,
  `created` TIMESTAMP NOT NULL,
  `post_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`comment_id`),
  INDEX `fk_agent_comment_post_agent_post1_idx` (`post_id` ASC),
  INDEX `fk_agent_comment_post_agent1_idx` (`account_id` ASC),
  CONSTRAINT `fk_agent_comment_post_agent_post1`
    FOREIGN KEY (`post_id`)
    REFERENCES `urbany`.`agent_post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent_comment_post_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`warranty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`warranty` (
  `warranty_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT NULL,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  PRIMARY KEY (`warranty_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`property_warranty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`property_warranty` (
  `property_warranty_id` INT NOT NULL AUTO_INCREMENT,
  `warranty_id` INT NOT NULL,
  `house_id` INT NOT NULL,
  PRIMARY KEY (`property_warranty_id`),
  INDEX `fk_property_warranty_warranty1_idx` (`warranty_id` ASC),
  INDEX `fk_property_warranty_property1_idx` (`house_id` ASC),
  CONSTRAINT `fk_property_warranty_warranty1`
    FOREIGN KEY (`warranty_id`)
    REFERENCES `urbany`.`warranty` (`warranty_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_warranty_property1`
    FOREIGN KEY (`house_id`)
    REFERENCES `urbany`.`property` (`house_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_verified_information`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_verified_information` (
  `account_id` INT NOT NULL,
  `certification_file_url` TEXT(500) NULL,
  `license_id` VARCHAR(45) NULL,
  `status` CHAR(2) NULL,
  `is_verified` CHAR(2) NULL DEFAULT 0,
  PRIMARY KEY (`account_id`),
  CONSTRAINT `fk_agent_verified_information_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_statistics_month`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_statistics_month` (
  `account_id` INT NOT NULL,
  `counter_profile_views` BIGINT NULL DEFAULT 0,
  `counter_propreties_views` BIGINT NULL DEFAULT 0,
  `counter_properties_published` INT NULL DEFAULT 0,
  `counter_properties_request_info` INT NULL DEFAULT 0,
  `counter_listing_represented` INT NULL DEFAULT 0,
  `counter_reviews` INT NULL DEFAULT 0,
  `average_reviews` CHAR(2) NULL DEFAULT 0,
  `counter_properties_finished` INT NULL DEFAULT 0,
  `year` CHAR(4) NULL,
  `month` CHAR(2) NULL,
  `status` CHAR(2) NULL,
  PRIMARY KEY (`account_id`),
  CONSTRAINT `fk_agent_statistics_agent10`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_service_areas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_service_areas` (
  `area_id` INT NOT NULL AUTO_INCREMENT,
  `created` TIMESTAMP NULL,
  `location_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`area_id`),
  INDEX `fk_agent_service_areas_location1_idx` (`location_id` ASC),
  INDEX `fk_agent_service_areas_agent1_idx` (`account_id` ASC),
  CONSTRAINT `fk_agent_service_areas_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `urbany`.`location` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent_service_areas_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_reviews_report_problem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_reviews_report_problem` (
  `report_id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `comment` TEXT(500) NOT NULL,
  `created` TIMESTAMP NOT NULL,
  `status` CHAR(2) NOT NULL DEFAULT '1',
  `problem` VARCHAR(255) NOT NULL,
  `review_id` INT NOT NULL,
  `ip` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`report_id`),
  INDEX `fk_agent_reviews_report_problem_agent_reviews1_idx` (`review_id` ASC),
  CONSTRAINT `fk_agent_reviews_report_problem_agent_reviews1`
    FOREIGN KEY (`review_id`)
    REFERENCES `urbany`.`agent_reviews` (`review_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`real_estate_association`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`real_estate_association` (
  `association_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `thumbnail` VARCHAR(255) NOT NULL,
  `description` TEXT NOT NULL,
  PRIMARY KEY (`association_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_real_estate_association`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_real_estate_association` (
  `agent_association_id` INT NOT NULL AUTO_INCREMENT,
  `created` TIMESTAMP NULL,
  `association_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`agent_association_id`),
  INDEX `fk_agent_real_estate_association_real_estate_association1_idx` (`association_id` ASC),
  INDEX `fk_agent_real_estate_association_agent1_idx` (`account_id` ASC),
  CONSTRAINT `fk_agent_real_estate_association_real_estate_association1`
    FOREIGN KEY (`association_id`)
    REFERENCES `urbany`.`real_estate_association` (`association_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agent_real_estate_association_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`feedback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`feedback` (
  `feedback_id` INT NOT NULL AUTO_INCREMENT,
  `ip` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `url` VARCHAR(255) NULL,
  `reason` TEXT(500) NULL,
  `text` TEXT NULL,
  PRIMARY KEY (`feedback_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`agent_payment_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`agent_payment_history` (
  `payment_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `title` VARCHAR(255) NULL,
  `json` TEXT NULL,
  `created` TIMESTAMP NULL,
  `expired` DATE NULL,
  `status` CHAR(2) NULL,
  `comments` TEXT NULL,
  `payment` DECIMAL(10,2) NULL,
  PRIMARY KEY (`payment_id`),
  INDEX `fk_agent_payment_history_agent1_idx` (`account_id` ASC),
  CONSTRAINT `fk_agent_payment_history_agent1`
    FOREIGN KEY (`account_id`)
    REFERENCES `urbany`.`agent` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`location_yearly_statistics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`location_yearly_statistics` (
  `statistics_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  `year` VARCHAR(45) NULL,
  `crime_rate` VARCHAR(45) NULL,
  `rent_square_meter_price` DECIMAL(10,2) NULL,
  `sale_square_meter_price` DECIMAL(10,2) NULL,
  PRIMARY KEY (`statistics_id`),
  INDEX `fk_location_yearly_statistics_location1_idx` (`location_id` ASC),
  CONSTRAINT `fk_location_yearly_statistics_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `urbany`.`location` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `urbany`.`listing_pictures`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `urbany`.`listing_pictures` (
  `picture_id` INT NOT NULL AUTO_INCREMENT,
  `listing_id` INT NOT NULL,
  `image_large` TEXT(500) NULL,
  `image_tiny` TEXT(500) NULL,
  `status` CHAR(2) NULL,
  PRIMARY KEY (`picture_id`),
  INDEX `fk_listing_pictures_listing1_idx` (`listing_id` ASC),
  CONSTRAINT `fk_listing_pictures_listing1`
    FOREIGN KEY (`listing_id`)
    REFERENCES `urbany`.`listing` (`listing_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `urbany`;

DELIMITER $$
USE `urbany`$$
CREATE DEFINER = CURRENT_USER TRIGGER `urbany`.`user_AFTER_INSERT` AFTER INSERT ON `account` FOR EACH ROW
BEGIN
	INSERT INTO user (account_id) VALUES (NEW.account_id);
END;$$

USE `urbany`$$
CREATE DEFINER = CURRENT_USER TRIGGER `urbany`.`agent_settings_AFTER_INSERT` AFTER INSERT ON `agent` FOR EACH ROW
BEGIN
	INSERT INTO agent_settings (account_id) VALUES (NEW.account_id);
END;$$

USE `urbany`$$
CREATE DEFINER = CURRENT_USER TRIGGER `urbany`.`user_settings_AFTER_INSERT` AFTER INSERT ON `user` FOR EACH ROW
BEGIN
	INSERT INTO user_settings (account_id) VALUES (NEW.account_id);
END;$$

USE `urbany`$$
CREATE DEFINER = CURRENT_USER TRIGGER `urbany`.`agent_statistics_AFTER_INSERT` AFTER INSERT ON `agent` FOR EACH ROW
BEGIN
	INSERT INTO agent_statistics (account_id) VALUES (NEW.account_id);
END;$$

USE `urbany`$$
CREATE DEFINER = CURRENT_USER TRIGGER `urbany`.`agent_verified_information_AFTER_INSERT` AFTER INSERT ON `agent` FOR EACH ROW
BEGIN
	INSERT INTO agent_verified_information (account_id) VALUES (NEW.account_id);
END;$$

USE `urbany`$$
CREATE DEFINER = CURRENT_USER TRIGGER `urbany`.`agent_statistics_month_AFTER_INSERT` AFTER INSERT ON `agent` FOR EACH ROW
BEGIN
	INSERT INTO agent_statistics_month (account_id) VALUES (NEW.account_id);
END;$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `urbany`.`property_status`
-- -----------------------------------------------------
START TRANSACTION;
USE `urbany`;
INSERT INTO `urbany`.`property_status` (`status_id`, `name`, `description`, `status`) VALUES (1, 'En pausa', 'En pausa', '1');
INSERT INTO `urbany`.`property_status` (`status_id`, `name`, `description`, `status`) VALUES (2, 'Publicada', 'Publicada', '1');
INSERT INTO `urbany`.`property_status` (`status_id`, `name`, `description`, `status`) VALUES (3, 'Inactiva', 'Inactiva', '1');
INSERT INTO `urbany`.`property_status` (`status_id`, `name`, `description`, `status`) VALUES (4, 'Borrador', 'La propiedad no se completo al crearla', '1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `urbany`.`coin_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `urbany`;
INSERT INTO `urbany`.`coin_type` (`coin_id`, `name`, `symbol`) VALUES (1, 'Peso uruguayo', '$');
INSERT INTO `urbany`.`coin_type` (`coin_id`, `name`, `symbol`) VALUES (2, 'Dolar', 'U$S');

COMMIT;


-- -----------------------------------------------------
-- Data for table `urbany`.`property_condition`
-- -----------------------------------------------------
START TRANSACTION;
USE `urbany`;
INSERT INTO `urbany`.`property_condition` (`condition_id`, `name`, `description`) VALUES (1, 'A estrenar', NULL);
INSERT INTO `urbany`.`property_condition` (`condition_id`, `name`, `description`) VALUES (2, 'Como nuevo', NULL);
INSERT INTO `urbany`.`property_condition` (`condition_id`, `name`, `description`) VALUES (3, 'Para reciclar', NULL);
INSERT INTO `urbany`.`property_condition` (`condition_id`, `name`, `description`) VALUES (4, 'Buenas condiciones', NULL);
INSERT INTO `urbany`.`property_condition` (`condition_id`, `name`, `description`) VALUES (5, 'Regular', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `urbany`.`property_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `urbany`;
INSERT INTO `urbany`.`property_type` (`type_id`, `name`) VALUES (1, 'Apartamento');
INSERT INTO `urbany`.`property_type` (`type_id`, `name`) VALUES (2, 'Habitación');
INSERT INTO `urbany`.`property_type` (`type_id`, `name`) VALUES (3, 'Local/oficina');
INSERT INTO `urbany`.`property_type` (`type_id`, `name`) VALUES (4, 'Casa');
INSERT INTO `urbany`.`property_type` (`type_id`, `name`) VALUES (5, 'Garaje');
INSERT INTO `urbany`.`property_type` (`type_id`, `name`) VALUES (6, 'Terreno');

COMMIT;


-- -----------------------------------------------------
-- Data for table `urbany`.`languages`
-- -----------------------------------------------------
START TRANSACTION;
USE `urbany`;
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (1, 'Ingles');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (2, 'Español');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (3, 'Chino');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (4, 'Arabe');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (5, 'Bengali');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (6, 'Frances');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (7, 'Portugues');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (8, 'Aleman');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (9, 'Italiano');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (10, 'Ucraniano');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (11, 'Japones');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (12, 'Holandes');
INSERT INTO `urbany`.`languages` (`language_id`, `name`) VALUES (13, 'Ruso');

COMMIT;


-- -----------------------------------------------------
-- Data for table `urbany`.`property_transaction_status`
-- -----------------------------------------------------
START TRANSACTION;
USE `urbany`;
INSERT INTO `urbany`.`property_transaction_status` (`status_id`, `name`, `description`) VALUES (1, 'En espera de un agente representante', NULL);
INSERT INTO `urbany`.`property_transaction_status` (`status_id`, `name`, `description`) VALUES (2, 'Asignado a un agente', NULL);
INSERT INTO `urbany`.`property_transaction_status` (`status_id`, `name`, `description`) VALUES (3, 'En pausa', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `urbany`.`interface_message`
-- -----------------------------------------------------
START TRANSACTION;
USE `urbany`;
INSERT INTO `urbany`.`interface_message` (`interface_message_id`, `title`, `message`, `interface_messagecol`, `show_in_this_page`) VALUES (1, 'Bienvenido a Urbany', NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `urbany`.`warranty`
-- -----------------------------------------------------
START TRANSACTION;
USE `urbany`;
INSERT INTO `urbany`.`warranty` (`warranty_id`, `name`, `description`, `status`) VALUES (1, 'Propiedad', NULL, DEFAULT);
INSERT INTO `urbany`.`warranty` (`warranty_id`, `name`, `description`, `status`) VALUES (2, 'Porto Seguro', NULL, DEFAULT);
INSERT INTO `urbany`.`warranty` (`warranty_id`, `name`, `description`, `status`) VALUES (3, 'Deposito', NULL, DEFAULT);
INSERT INTO `urbany`.`warranty` (`warranty_id`, `name`, `description`, `status`) VALUES (4, 'Fideciu', NULL, DEFAULT);
INSERT INTO `urbany`.`warranty` (`warranty_id`, `name`, `description`, `status`) VALUES (5, 'Anda', NULL, DEFAULT);
INSERT INTO `urbany`.`warranty` (`warranty_id`, `name`, `description`, `status`) VALUES (6, 'Sura', NULL, DEFAULT);
INSERT INTO `urbany`.`warranty` (`warranty_id`, `name`, `description`, `status`) VALUES (7, 'Contaduria', NULL, DEFAULT);
INSERT INTO `urbany`.`warranty` (`warranty_id`, `name`, `description`, `status`) VALUES (8, 'Mapfre', NULL, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `urbany`.`real_estate_association`
-- -----------------------------------------------------
START TRANSACTION;
USE `urbany`;
INSERT INTO `urbany`.`real_estate_association` (`association_id`, `name`, `thumbnail`, `description`) VALUES (1, 'CIU', 'ciu.webp', 'Cámara de Industrias del Uruguay');
INSERT INTO `urbany`.`real_estate_association` (`association_id`, `name`, `thumbnail`, `description`) VALUES (2, 'ADIU', 'adiu.webp', 'Asociación de Agentes Inmobiliarios del Uruguay');

COMMIT;

